<?xml version="1.0" encoding="us-ascii"?>
	
<experiment>
	<seed>-59875563504154406</seed>
	
	
	
	<universe>
		<name>edu.usf.ratsim.experiment.universe.virtual.VirtUniverse</name>
		<params>
			<!-- Distance from which the food is accessible according to the universe -->
			<closeToFoodThrs>0.1</closeToFoodThrs>
			<!-- Map file -->
			<maze>multiscalemodel/src/edu/usf/ratsim/experiment/mazes/tspSimpleRuns.xml</maze>
			<!-- Display de window or run without GUI -->
			<display>true</display>
		</params>
	</universe>
	
	<robot>
		<!-- Robot to use. Use full name of the class -->
		<name>platform.simulatorVirtual.robots.PuckRobot</name>
		<params>
			
			<feederVisibility>
				<!-- Half the field of view of the rat -->
				<halfFieldOfView>4</halfFieldOfView>
				<!-- How long can the rat see in meters -->
				<visionDist>10</visionDist>
			</feederVisibility>
				
			<navigation>
				<separation>0.2</separation>
				<maxSpeed>0.3</maxSpeed>
			</navigation>
			
		</params>
	</robot>
	
	<model>
		<!-- Model implementation -->
		<name>edu.usf.ratsim.experiment.subject.TSPFrance.TSPSubjectFrance</name>
		<params>
			<!-- Step length in meters -->
			<step>.05</step>
			<!-- Left rotation amount in radians -->
			<leftAngle>0.195</leftAngle>
			<!-- Right rotation amount in radians -->
			<rightAngle>-0.195</rightAngle>
			<!-- Type of learning -->
			<rlType>actorCritic</rlType>
			<!-- Minimum conjuntive layer cell radius -->
			<PCRadius>0.12</PCRadius>
			<!-- Cells per side of the square -->
			<numPCCellsPerSide>16</numPCCellsPerSide>
			<!-- Type of conjunctive cell -->
			<placeCells>ExponentialNoThresholding</placeCells>
			<!-- Map dimensions for conjuntive cell placing -->
			<xmin>-1</xmin>
			<ymin>-1</ymin>
			<xmax>1</xmax>
			<ymax>1</ymax>
			
	
			<backendType>local</backendType>
			<backendDeviceIndex>0</backendDeviceIndex>
			<backendHost>127.0.0.1</backendHost>
			<backendPort>12345</backendPort>
			
			<reservoirSize>1024</reservoirSize>
			<leakRate>0.45</leakRate>
			<learningRate>0.001</learningRate>
			<initialStateScale>0.01</initialStateScale>
			<snippetsSize>10</snippetsSize>
			<timeBudget>20000</timeBudget>
			<rows>100</rows>
			<cols>100</cols>
			<sigma>1</sigma>
			<scale>0.0000001</scale>
			<radius>0.2</radius>
			<preamble>10</preamble>
			
			<!-- Order in which feeders are visited -->
			<!--<feederOrder>$(feederOrder)</feederOrder>-->
			<feederOrder></feederOrder> 
			<pathFile>$(ratpath)</pathFile>
			
			
			<filterVisitedFeedersProbability>$(P1)</filterVisitedFeedersProbability>
			<moveToClosestFeederInSubsetProbability>$(P2)</moveToClosestFeederInSubsetProbability>
		</params>
	</model>
	
	<group>
		<name>Control</name>
		<numMembers>1</numMembers>
		<params>
		</params>
		<tasks>
		</tasks>
	</group>
	
	<!-- Task to be performed before the eperiment -->
	<beforeExperimentTasks>
		<!-- Enable feeders all feeders -->
		<task>
			<name>edu.usf.experiment.task.AddAllFeedersTask</name>
			<params>
				<feederFile>InterLabFunctionality\Jan2016\FeedersFromSentFiles.txt</feederFile>
				<selected>$(enabledFeeders)</selected>
			</params>
		</task>
		
		<task>
			<name>edu.usf.experiment.task.EnableFeeders</name>
			<params>
				<feeders>$(enabledFeeders)</feeders>
			</params>
		</task>
		
		<!--<task>
			<name>edu.usf.experiment.task.EnableAllFeeders</name>
		</task> -->
	</beforeExperimentTasks>
	
	<!-- Loggers to be executed before the eperiment -->
	<beforeExperimentLoggers>
		<!-- Log walls -->
		<!--<logger> <name>edu.usf.experiment.log.WallLogger</name> <params> </params> </logger>-->
		<!-- Log conjunctive cells -->
		
	</beforeExperimentLoggers>
	<!-- Plots to perform before the experiment -->
	<beforeExperimentPlotters>
		<!-- Convert CSV files to rdata files -->
		<!-- <plotter> <name>edu.usf.experiment.plot.CSVConverter</name> </plotter> -->
		<!-- <plotter> <name>edu.usf.experiment.plot.PlotGatherer</name> </plotter> -->
		<!--<plotter> <name>edu.usf.ratsim.experiment.plot.PCPlotter</name> </plotter>-->
	</beforeExperimentPlotters>
	
	<!-- Training trial - Non-delayed cue phase -->
	<trial>
		<name>Travel</name>
		<!-- Groups to apply the trial -->
		<groups>
			<group>Control</group>
		</groups>
		<!-- Tasks to perform beforehand -->
		<beforeTrialTasks>
			
			
		</beforeTrialTasks>
		<!-- Episodes definition -->
		<episodes>
			<!-- Number of episodes -->
			<number>3</number>
			<!-- time that advances on each sim cycle -->
			<timeStep>0.1</timeStep>
			<!-- Sleep between cycles for visualization -->
			<sleep>0</sleep>
			<!-- Tasks to perform before each episode -->
			<beforeEpisodeTasks>
			
				<task>
					<name>edu.usf.experiment.task.EnableFeeders</name>
					<params>
						<feeders>$(enabledFeeders)</feeders>
					</params>
				</task>
			
			
				<task>
					<name>edu.usf.experiment.task.ActivateAllEnabledFeeders</name>
				</task>
				
				<!-- Place the animat in a given place -->
				<task>
					<name>edu.usf.experiment.task.PlaceRobotInitally</name>
					<params>
						<!--  <filename>$(ratpath)</filename> -->
						<pointXYW>$(startPosition)</pointXYW>
						
						<!--<point>
							<x>-0.2</x>
							<y>-0.4</y>
							<theta>1.57</theta>
						</point>-->
						
					</params>
				</task>
				
				<task> <name>edu.usf.experiment.task.ReleaseFoodFromEnabledFeeders</name> </task>
				
				
			</beforeEpisodeTasks>
			<!-- Tasks to performe before each cycle -->
			<beforeCycleTasks>
			</beforeCycleTasks>
			<!-- Tasks to performe after each cycle -->
			<afterCycleTasks>
				<!-- <task>
					<name>edu.usf.experiment.task.PlaceRobotFile</name>
					<params>
						<filename>$(ratpath)</filename>
					</params> 
				</task> -->
			</afterCycleTasks>
			<!-- Loggers to execute after each cycle -->
			<afterCycleLoggers>
				<!-- Log the subject position -->
				<logger>
					<name>edu.usf.experiment.log.SubjectPositionLogger</name>
					<params>
					</params>
				</logger>
				<logger>
					<name>edu.usf.ratsim.experiment.log.PCActivityLogger</name>
				</logger>
			</afterCycleLoggers>
			<!-- Loggers to execute after each episode -->
			<afterEpisodeLoggers>
				<!-- Log each wall position -->
				<logger>
					<name>edu.usf.experiment.log.WallLogger</name>
					<params>
					</params>
				</logger>
				<logger>
					<name>edu.usf.experiment.log.FeederLogger</name>
				</logger>
				<logger>
					<name>edu.usf.ratsim.experiment.log.PCLogger</name>
				</logger>
			</afterEpisodeLoggers>
			<!-- Tasks to execute after each episode -->
			<afterEpisodeTasks>
			</afterEpisodeTasks>
			<!-- Conditions upon which the episode ends -->
			<stopConditions>
				<!-- Timeout cycles -->
				<condition>
					<name>edu.usf.experiment.condition.MaxCycles</name>
					<params>
						<max>100000</max>
					</params>
				</condition>
				<!-- Has eaten from 5 feeders -->
				<!--<condition>
					<name>edu.usf.experiment.condition.FoundNFoodStopCond</name>
					<params>
						<n>$(nFoodStopCondition)</n>
					</params>
				</condition>-->
				
				<!--<condition>
					<name>edu.usf.experiment.condition.FoundNFoodStopCond</name>
					<params>
						<n>21</n>
					</params>
				</condition>-->
				
				<!-- Somebody sets done flag condition -->
				<condition>
					<name>edu.usf.experiment.condition.DoneCondition</name>
					<params>
					</params>
				</condition>
				
				<condition>
					<name>edu.usf.experiment.condition.FoundAllFoodStopCond</name>
					<params>
					</params>
				</condition>
				
			</stopConditions>
			<!-- Plotters to execute after each episode -->
			<afterEpisodePlotters>
				<!-- Copy the maze file to the episode folder -->
				<plotter>
					<name>edu.usf.experiment.plot.CopyMazeFile</name>
				</plotter>
				<!-- Convert csv to rdata -->
				<plotter>
					<name>edu.usf.experiment.plot.CSVConverter</name>
				</plotter>
				<!-- Get time info from position information -->
				<plotter>
					<name>edu.usf.experiment.plot.SummarizeRuntimes</name>
				</plotter>
				<!-- Plot path for each episode -->
				<plotter>
					<name>edu.usf.experiment.plot.PathPlotter</name>
				</plotter>
				<plotter>
					<name>edu.usf.ratsim.experiment.plot.PCPlotter</name>
				</plotter>
				
			</afterEpisodePlotters>
		</episodes>
		<!-- Tasks to perform after the trial has ended -->
		<afterTrialTasks>
		</afterTrialTasks>
		<!-- Loggers to execute after the trial has ended -->
		<afterTrialLoggers>
			
		</afterTrialLoggers>
		<!-- Plotters to execute after the trial has ended -->
		<afterTrialPlotters>

		</afterTrialPlotters>
	</trial>
	
	<!-- Tasks to perform after the experiment is over -->
	<afterExperimentTasks>
	</afterExperimentTasks>
	<!-- Loggers to execute after the experiment is over -->
	<afterExperimentLoggers>
	</afterExperimentLoggers>
	<!-- Plotters to execute after the experiment is over -->
	<afterExperimentPlotters>
		<plotter>
			<name>edu.usf.experiment.plot.RuntimePerTrialPlotter</name>
		</plotter>
		
	</afterExperimentPlotters>
</experiment>
