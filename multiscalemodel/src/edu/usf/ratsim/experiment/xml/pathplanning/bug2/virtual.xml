<?xml version="1.0" encoding="us-ascii"?>
	
<experiment>
	
<!--	<seed>23423423</seed-->
	<universe>
		<name>edu.usf.ratsim.experiment.universe.virtual.VirtUniverse</name>
		<params>
			<!-- Distance from which the food is accessible according to the universe -->
			<closeToFoodThrs>0.1</closeToFoodThrs>
			<!-- Map file -->
			<maze>multiscalemodel/src/edu/usf/ratsim/experiment/mazes/pathplanning/OneWall.xml</maze>
			<!-- Display de window or run without GUI -->
			<display>true</display>
		</params>
	</universe>
	
	<robot>
		<!-- Robot to use. Use full name of the class -->
		<name>edu.usf.ratsim.robot.virtual.VirtualRobot</name>
		<params>
			<!-- Percentual translational noise -->
			<noise>.05</noise>
			<!-- Rotation noise added after translation -->
			<translationRotationNoise>.02</translationRotationNoise>
			<!-- How many steps are projected for obstacle avoidance purpose -->
			<lookaheadSteps>1</lookaheadSteps>
			<!-- Half the field of view of the rat -->
			<halfFieldOfView>1.83</halfFieldOfView>
			<!-- How long can the rat see in meters -->
			<visionDist>10</visionDist>
			<!-- How far away can the robot eat food. This should be shorter than the universe
				threshold -->
			<closeThrs>.1</closeThrs>
			
			<sonarAngles>1.57, 0.79, 0, -0.79, -1.57</sonarAngles>
			<sonarAperture>0.79</sonarAperture>
			<sonarMaxDist>2</sonarMaxDist>
			<sonarNumRays>9</sonarNumRays>
		
		</params>
	</robot>
	
	<model>
		<!-- Model implementation -->
		<name>edu.usf.ratsim.experiment.subject.pathplanning.bug2.Bug2Subject</name>
		<params>
			<!-- Step length in meters -->
			<step>.05</step>
			<!-- Left rotation amount in radians -->
			<leftAngle>0.195</leftAngle>
			<!-- Right rotation amount in radians -->
			<rightAngle>-0.195</rightAngle>
			
			<xmin>-1</xmin>
			<ymin>-1</ymin>
			<xmax>1</xmax>
			<ymax>1</ymax>
		</params>
	</model>
	
	<group>
		<name>Control</name>
		<numMembers>16</numMembers>
		<params>
		</params>
		<tasks>
		</tasks>
	</group>
	
	<beforeExperimentTasks>
		<task>
			<name>edu.usf.experiment.task.PlaceRobotInitally</name>
			<params>
				<point>
					<x>1</x>
					<y>0</y>
					<theta>3.14</theta>
				</point>
			</params>
		</task>
		<task>
			<name>edu.usf.experiment.task.PublishPlatformPosition</name>
			<params>
			</params>
		</task>
	</beforeExperimentTasks>
	
	<!-- Loggers to be executed before the eperiment -->
	<beforeExperimentLoggers>
		<!-- Log walls -->
		<!--<logger> <name>edu.usf.experiment.log.WallLogger</name> <params> </params> </logger>-->
		<!-- Log conjunctive cells -->
	</beforeExperimentLoggers>
	<!-- Plots to perform before the experiment -->
	<beforeExperimentPlotters>
		<!-- Convert CSV files to rdata files -->
		<!-- <plotter> <name>edu.usf.experiment.plot.CSVConverter</name> </plotter> -->
		<!-- <plotter> <name>edu.usf.experiment.plot.PlotGatherer</name> </plotter> -->
		<!--<plotter> <name>edu.usf.ratsim.experiment.plot.PCPlotter</name> </plotter>-->
	</beforeExperimentPlotters>
	
	<!-- Training trial - Non-delayed cue phase -->
	<trial>
		<name>Training</name>
		<!-- Groups to apply the trial -->
		<groups>
			<group>Control</group>
		</groups>
		<!-- Tasks to perform beforehand -->
		<beforeTrialTasks>
		</beforeTrialTasks>
		<!-- Episodes definition -->
		<episodes>
			<!-- Number of episodes -->
			<number>40</number>
			<!-- Sleep between cycles for visualization -->
			<sleep>10</sleep>
			<!-- Tasks to perform before each episode -->
			<beforeEpisodeTasks>
				
			</beforeEpisodeTasks>
			<!-- Tasks to performe before each cycle -->
			<beforeCycleTasks>
			</beforeCycleTasks>
			<!-- Tasks to performe after each cycle -->
			<afterCycleTasks>
			</afterCycleTasks>
			<!-- Loggers to execute after each cycle -->
			<afterCycleLoggers>
			</afterCycleLoggers>
			<!-- Loggers to execute after each episode -->
			<afterEpisodeLoggers>
				
			</afterEpisodeLoggers>
			<!-- Tasks to execute after each episode -->
			<afterEpisodeTasks>
			</afterEpisodeTasks>
			<!-- Conditions upon which the episode ends -->
			<stopConditions>
				<condition>
					<name>edu.usf.experiment.condition.MaxCycles</name>
					<params>
						<max>5000</max>
					</params>
				</condition>
				<condition>
					<name>edu.usf.experiment.condition.FoundPlatform</name>
					<params>
					</params>
				</condition>
			</stopConditions>
			<!-- Plotters to execute after each episode -->
			<afterEpisodePlotters>
				
			</afterEpisodePlotters>
		</episodes>
		<!-- Tasks to perform after the trial has ended -->
		<afterTrialTasks>
			
		</afterTrialTasks>
		<afterTrialLoggers>
		</afterTrialLoggers>
		<!-- Plotters to execute after the trial has ended -->
		<afterTrialPlotters>
		
		</afterTrialPlotters>
	</trial>
	
	
	
	<!-- Tasks to perform after the experiment is over -->
	<afterExperimentTasks>
	</afterExperimentTasks>
	<!-- Loggers to execute after the experiment is over -->
	<afterExperimentLoggers>
	</afterExperimentLoggers>
	<!-- Plotters to execute after the experiment is over -->
	<afterExperimentPlotters>
	</afterExperimentPlotters>
</experiment>
	
	
